<!DOCTYPE html>
<html>
	<head>
		<title>Taskin API</title>
		<link rel="stylesheet" href="/stylesheets/style.css" />
		<!-- Bootstrap CSS -->
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
			crossorigin="anonymous"
		/>
	</head>
	<body>
		<div class="navbar navbar-dark bg-dark shadow-sm">
			<div class="container d-flex">
				<a class="d-flex align-items-center text-light text-decoration-none">
					<img src="https://img.icons8.com/fluency/48/000000/task.png" />
					<span class="fs-4">Taskin API </span>
				</a>
				<a
					href="https://github.com/davidperjac/DAWM/tree/master/TaskManager"
					class="navbar-brand align-items-center"
				>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						x="0px"
						y="0px"
						width="40"
						height="40"
						viewBox="0 0 30 30"
						style="fill: #eeeeee"
					>
						<path
							d="M15,3C8.373,3,3,8.373,3,15c0,5.623,3.872,10.328,9.092,11.63C12.036,26.468,12,26.28,12,26.047v-2.051 c-0.487,0-1.303,0-1.508,0c-0.821,0-1.551-0.353-1.905-1.009c-0.393-0.729-0.461-1.844-1.435-2.526 c-0.289-0.227-0.069-0.486,0.264-0.451c0.615,0.174,1.125,0.596,1.605,1.222c0.478,0.627,0.703,0.769,1.596,0.769 c0.433,0,1.081-0.025,1.691-0.121c0.328-0.833,0.895-1.6,1.588-1.962c-3.996-0.411-5.903-2.399-5.903-5.098 c0-1.162,0.495-2.286,1.336-3.233C9.053,10.647,8.706,8.73,9.435,8c1.798,0,2.885,1.166,3.146,1.481C13.477,9.174,14.461,9,15.495,9 c1.036,0,2.024,0.174,2.922,0.483C18.675,9.17,19.763,8,21.565,8c0.732,0.731,0.381,2.656,0.102,3.594 c0.836,0.945,1.328,2.066,1.328,3.226c0,2.697-1.904,4.684-5.894,5.097C18.199,20.49,19,22.1,19,23.313v2.734 c0,0.104-0.023,0.179-0.035,0.268C23.641,24.676,27,20.236,27,15C27,8.373,21.627,3,15,3z"
						></path>
					</svg>
				</a>
			</div>
		</div>
		<div class="container py-4">
			<div class="p-2 mb-4 bg-light rounded-3">
				<div class="px-4 pt-5 text-center">
					<h1 class="display-4 fw-bold">Task Manager</h1>
					<div class="col-lg-6 mx-auto">
						<p class="lead mb-4">
							Taskin is a MEAN Stack Web Application for productivity that
							allows you to create tasks and organize them by boards. It has
							features as authentication and authorization for securing routes.
							Uses MySQL as relational database, Firebase Realtime Database as a
							non relational database and Express as NodeJS server framework.
						</p>
						<div class="d-grid gap-2 d-sm-flex justify-content-sm-center mb-5">
							<a href="#documentation">
								<button
									type="button"
									class="btn btn-primary btn-lg px-4 me-sm-3"
								>
									API Documentation
								</button>
							</a>

							<a
								href="https://endearing-taffy-2df178.netlify.app/"
								class="text-decoration-none"
							>
								<button
									type="button"
									class="btn btn-outline-secondary btn-lg px-4"
								>
									Live App
								</button>
							</a>
						</div>
					</div>
					<div class="overflow-hidden" style="max-height: 30vh">
						<div class="container px-5">
							<img
								src="/images/taskin.png"
								class="foto img-fluid border rounded-3 shadow-xl"
								alt="Example image"
								width="700"
								height="500"
								loading="lazy"
							/>
						</div>
					</div>
				</div>
			</div>

			<div class="row justify-content-between">
				<h1 class="display-6 fw-bold mt-3">MEAN Stack</h1>
				<p class="lead mb-2">
					The Web App is built with the following technologies
				</p>
				<div class="row row-cols-1 row-cols-lg-2 align-items-stretch g-4">
					<div class="col">
						<div
							class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
							style="background-image: url('/images/mysql.webp')"
						>
							<div class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1">
								<h2 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold text-light">
									MySQL
								</h2>
							</div>
						</div>
					</div>

					<div class="col">
						<div
							class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg"
							style="background-image: url('/images/angular.png')"
						>
							<div
								class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1 text-light"
							>
								<h2 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">Angular</h2>
							</div>
						</div>
					</div>

					<div class="col">
						<div
							class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg text-light"
							style="background-image: url('/images/express.jpeg')"
						>
							<div class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1">
								<h2 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">Express</h2>
							</div>
						</div>
					</div>

					<div class="col">
						<div
							class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg text-light"
							style="background-image: url('/images/node.jpeg')"
						>
							<div class="d-flex flex-column h-100 p-5 pb-3 text-shadow-1">
								<h2 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">NodeJS</h2>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="row bg-light rounded-3 mt-5 p-5" id="documentation">
				<h3 class="display-6 fw-bold mt-4">API Documentation</h3>
				<p class="lead mb-2">
					This API is divided in 3 sections : Authentication, Boards and Tasks.
					Below there are the available routes and methods used in each one, and
					their corresponding CRUD operation.
				</p>
				<div class="auth mt-4">
					<h3>Authentication</h3>
					<div class="auth-methods mt-3">
						<div class="get">
							<h4>GET</h4>
							<code>http://localhost:3000/api/v1/auth</code>
							<p class="lead mb-3">
								Get all users. Passwords are encrypted by bcrypt, the ids are in
								UUID format.
							</p>
							<code>http://localhost:3000/api/v1/auth/:userId</code>
							<p class="lead mb-3">Get a user by its id.</p>
						</div>
						<div class="post">
							<h4>POST</h4>
							<code>http://localhost:3000/api/v1/auth/register</code>
							<p class="lead mb-3">
								Register an user in the application. It checks if a username is
								already taken.
							</p>
							<code>http://localhost:3000/api/v1/auth/login</code>
							<p class="lead mb-3">
								Login a user in the application. It checks if a username is
								already registered.
							</p>
							<code>http://localhost:3000/api/v1/auth/verify-token</code>
							<p class="lead mb-3">
								Checks if the stored JSON Web Token in Local Storage has the
								correct format and belongs to an existing user. In the
								application an Angular Guard protects certain views depending on
								the response of this route.
							</p>
						</div>
					</div>
				</div>
				<div class="boards mt-4">
					<h3>Boards</h3>
					<div class="boards-methods mt-3">
						<div class="get">
							<h4>GET</h4>
							<code>http://localhost:3000/api/v1/boards</code>
							<p class="lead mb-3">
								Get all boards in the application. The ids are in UUID format.
							</p>
							<code>http://localhost:3000/api/v1/boards/:userId</code>
							<p class="lead mb-3">Get all boards of the specified user.</p>
						</div>
						<div class="post">
							<h4>POST</h4>
							<code>http://localhost:3000/api/v1/boards/:userId</code>
							<p class="lead mb-3">
								Add a board to the application of the specified user. It checks
								if the user already has a board with the provided name.
							</p>
						</div>
						<div class="delete">
							<h4>DELETE</h4>
							<code>http://localhost:3000/api/v1/boards/:boardId</code>
							<p class="lead mb-3">Deletes the specified board.</p>
						</div>
					</div>
				</div>
				<div class="tasks mt-4">
					<h3>Tasks</h3>
					<div class="tasks-methods mt-3">
						<div class="get">
							<h4>GET</h4>
							<code>http://localhost:3000/api/v1/tasks</code>
							<p class="lead mb-3">
								Get all the tasks in the application. The tasks are fetch from
								the Firebase Realtime Database. The ids are incremental
								integers.
							</p>
							<code>http://localhost:3000/api/v1/tasks/:boardId</code>
							<p class="lead mb-3">Get all the tasks of the specified board.</p>
						</div>
						<div class="post">
							<h4>POST</h4>
							<code>http://localhost:3000/api/v1/tasks/:boardId</code>
							<p class="lead mb-3">Add a task to the specified board.</p>
						</div>
						<div class="delete">
							<h4>DELETE</h4>
							<code>http://localhost:3000/api/v1/tasks/:taskId</code>
							<p class="lead mb-3">Deletes the specified task.</p>
						</div>
						<div class="put">
							<h4>PUT</h4>
							<code>http://localhost:3000/api/v1/tasks/:taskId</code>
							<p class="lead mb-3">
								Updates the specified task. It check or uncheck the task.
							</p>
						</div>
					</div>
				</div>
			</div>

			<footer class="pt-3 mt-4 text-muted border-top">
				Â©2022 Powered by
				<a href="https://github.com/davidperjac" style="text-decoration: none">
					David Perez
				</a>
			</footer>
		</div>

		<!-- Option 1: Bootstrap Bundle with Popper -->
		<script
			src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
			crossorigin="anonymous"
		></script>
	</body>
</html>
